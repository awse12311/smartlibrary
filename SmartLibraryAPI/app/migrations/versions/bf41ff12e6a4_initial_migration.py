"""initial migration

Revision ID: bf41ff12e6a4
Revises: 
Create Date: 2024-02-01 13:42:00.659244

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bf41ff12e6a4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ratings')
    op.drop_table('users')
    op.drop_table('questionnaire_users_interest')
    op.drop_table('questionnaire_books_interest')
    op.drop_table('authors')
    op.drop_table('books')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('books_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('best_book_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('work_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('books_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('isbn', sa.VARCHAR(length=13), autoincrement=False, nullable=True),
    sa.Column('isbn13', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('language_code', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('average_rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ratings_count', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('work_ratings_count', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('work_text_reviews_count', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('small_image_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('label', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['label'], ['questionnaire_books_interest.id'], name='books_label_fkey'),
    sa.PrimaryKeyConstraint('id', name='books_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('authors',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('author_name', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='authors_book_id_fkey'),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='fk_books_id'),
    sa.PrimaryKeyConstraint('id', name='authors_pkey')
    )
    op.create_table('questionnaire_books_interest',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('questionnaire_books_interest_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('parent_interest_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('interest_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['parent_interest_id'], ['questionnaire_books_interest.id'], name='questionnaire_books_interest_parent_interest_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='questionnaire_books_interest_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('questionnaire_users_interest',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('interests_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['interests_id'], ['questionnaire_books_interest.id'], name='fk_interests_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='fk_users_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='questionnaire_users_interest_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='questionnaire_users_interest_pkey')
    )
    op.create_table('users',
    sa.Column('user_id', sa.INTEGER(), server_default=sa.text("nextval('users_user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('face_recognition_image_path', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('ratings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('book_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='fk_books_id'),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], name='ratings_book_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='fk_users_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='ratings_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ratings_pkey')
    )
    # ### end Alembic commands ###
